---
title: "london"
author: "Theo Rashid"
date: "23/03/2023"
format: html
--

## london lsoa

```{r imports}
library(here)
library(tidyverse)
library(abind)
library(cowplot)
library(colorspace)
library(scales)
library(geojsonsf)
library(sf)
library(ggridges)
library(geofacet)

source(here("thesis_analysis", "theme_thesis.R"))
source(here("thesis_analysis", "palette_thesis.R"))
source(here("thesis_analysis", "skeletons.R"))
```

## data

```{r data}
args <- lst(region = "LSOA", model = "bb_nested_as_at_st")

sexes <- c("women", "men")

e0 <- abind(
  read_rds(
    here(
      "data",
      "life_table",
      str_c(
        args$region,
        "_female_",
        args$model,
        "_e0.rds"
      )
    )
  ),
  read_rds(
    here(
      "data",
      "life_table",
      str_c(
        args$region,
        "_male_",
        args$model,
        "_e0.rds"
      )
    )
  ),
  along = 0,
  new.names = sexes
)

dimnames(e0) <- list(
  sex = dimnames(e0)[[1]],
  year = dimnames(e0)[[2]],
  LSOA2011 = dimnames(e0)[[3]],
  sample = dimnames(e0)[[4]]
)

e0_global <- abind(
  read_rds(
    here(
      "data",
      "life_table",
      str_c(args$region, "_GLOBAL_female_nested_as_at_e0.rds")
    )
  ),
  read_rds(
    here(
      "data",
      "life_table",
      str_c(args$region, "_GLOBAL_male_nested_as_at_e0.rds")
    )
  ),
  along = 0,
  new.names = sexes
) |>
  apply(
    MARGIN = c(1, 2),
    FUN = median
  ) |>
  as.data.frame.table(stringsAsFactors = FALSE) |>
  as_tibble() |>
  rename(`e0` = Freq, sex = Var1, year = Var2) |>
  mutate(year = as.integer(year)) |>
  arrange()

e0_LAD <- read_csv(
  here(
    "data",
    "life_table",
    "LSOA_LAD_e0_inequality.csv"
  )
) |>
  mutate(sex = recode(sex, Male = "men", Female = "women")) |>
  rename(year = YEAR)
```

```{r covariate and shape data}
london_change <- read_csv(here("data", "covariates", "london_change_variables.csv"))

shape <- geojson_sf(here("data", "covariates", "LSOA2011_LDN_BGC.geojson"))

lookup <- read_csv(
  here(
    "data",
    "covariates",
    "LSOA_MSOA_LAD_GOR_CTRY_lookup.csv"
  )
) |>
  select(LSOA2011, MSOA2011, LAD2020, LAD2020NM) |>
  distinct() |>
  arrange(LSOA2011) |>
  filter(LSOA2011 %in% (shape |> pull(LSOA2011)))

n_lsoa <- length(unique(lookup$LSOA2011))
```

```{r calculate median e0 in over time}
median_e0 <- apply(
  X = e0,
  MARGIN = c(1, 2, 3),
  FUN = median
) |>
  as.data.frame.table(stringsAsFactors = FALSE) |>
  as_tibble() |>
  rename(`e0` = Freq) |>
  mutate(year = as.integer(year)) |>
  arrange()
```

```{r calculate median e0 change 2002-2019}
median_e0_change <- apply(
  X = e0[, "2019", , ] - e0[, "2002", , ],
  MARGIN = c(1, 2),
  FUN = median
) |>
  as.data.frame.table(stringsAsFactors = FALSE) |>
  as_tibble() |>
  rename(de0 = Freq)
```

## maps

```{r map level 2019}
scale_sex <- list(
  women = scale_fill_continuous_divergingx(
    palette = "RdBu",
    mid = e0_global |>
      filter(sex == "women") |>
      filter(year == 2019) |>
      pull(e0),
    p1 = 0.8,
    p2 = 0.8,
    p3 = 0.8,
    p4 = 0.8,
    name = "Life expectancy, women",
    breaks = breaks_pretty(n = 5)
  ),
  men = scale_fill_continuous_divergingx(
    palette = "RdBu",
    mid = e0_global |>
      filter(sex == "men") |>
      filter(year == 2019) |>
      pull(e0),
    p1 = 0.8,
    p2 = 0.8,
    p3 = 0.8,
    p4 = 0.8,
    name = "Life expectancy, men",
    breaks = breaks_pretty(n = 5)
  )
)

maps <- list()
ridges <- list()

for (s in sexes) {
  plot_df <- shape |>
    left_join(lookup) |>
    left_join(
      median_e0 |>
        filter(sex == s) |>
        filter(year == 2019)
    )

  maps[[s]] <- plot_df |>
    ggplot(aes(fill = `e0`)) +
    map_skeleton_msoa +
    scale_sex[[s]]

  ridges[[s]] <- median_e0 |>
    filter(sex == s) |>
    filter(year == 2019) |>
    ggplot(aes(x = e0, y = 1, fill = after_stat(x))) +
    ridge_skeleton +
    scale_sex[[s]]
}

grid <- plot_grid(maps[["women"]], maps[["men"]])

grid <- ggdraw(grid) +
  draw_plot(ridges[["women"]], -0.42, -0.24, scale = 0.11) +
  draw_plot(ridges[["men"]], 0.08, -0.24, scale = 0.11)

save_plot(
  here(
    "thesis_analysis",
    "london",
    "figures",
    "map_level.pdf"
  ),
  grid
)
```

```{r map change 2002-2019}
scale_change <- scale_fill_continuous_divergingx(
  palette = "Geyser",
  rev = TRUE,
  mid = 0.0,
  l3 = 40,
  p3 = 0.3,
  p4 = 0.3,
  name = "Life expectancy change from 2002-19 (years)",
  breaks = breaks_pretty(n = 8),
  limits = c(min(median_e0_change$de0), max(median_e0_change$de0))
)

maps <- list()
for (s in sexes) {
  plot_df <- shape |>
    left_join(lookup) |>
    left_join(median_e0_change |> filter(sex == s))

  maps[[s]] <- plot_df |>
    ggplot(aes(fill = `de0`)) +
    map_skeleton_msoa +
    scale_change
}

grid <- plot_grid(
  maps[["women"]], maps[["men"]],
  labels = sexes,
  label_x = 0.5,
  label_y = 0.85,
  label_size = 6
)

legend <- get_legend(
  maps[["women"]] +
    theme(
      legend.direction = "horizontal",
      legend.position = "top",
      legend.key.width = unit(15, units = "pt"),
      legend.key.height = unit(5, units = "pt"),
      legend.title = element_text(
        size = 3,
        face = "bold"
      ),
      legend.text = element_text(size = 3)
    ) +
    guides(fill = guide_colourbar(title.position = "top"))
)

grid <- ggdraw(grid) + draw_grob(legend, 0, 0.25)

save_plot(
  here(
    "thesis_analysis",
    "london",
    "figures",
    "map_change.pdf"
  ),
  grid
)
```

## ridges

```{r ridges}
scale_sex <- list(
  women = scale_fill_manual(
    values = c(desaturate(sex_pal[2], amount = 0.5), sex_pal[2]),
    name = ""
  ),
  men = scale_fill_manual(
    values = c(desaturate(sex_pal[1], amount = 0.5), sex_pal[1]),
    name = ""
  )
)

for (s in sexes) {
  district_ridge_order <- median_e0 |>
    left_join(lookup) |>
    filter(sex == s) |>
    filter(year == 2002) |>
    group_by(LAD2020NM) |>
    summarise(district_median_e0 = median(e0)) |>
    arrange(district_median_e0) |>
    pull(LAD2020NM)

  p_level <- median_e0 |>
    left_join(lookup) |>
    filter(sex == s) |>
    filter(year == 2002 | year == 2019) |>
    mutate(LAD2020NM = factor(LAD2020NM, levels = district_ridge_order)) |>
    ggplot(aes(x = e0, y = LAD2020NM, group = interaction(LAD2020, year), fill = factor(year))) +
    stat_density_ridges(colour = "#cccccc", size = 0.1, alpha = 0.7) +
    scale_sex[[s]] +
    scale_y_discrete(expand = c(0, 0, 0.05, 0)) +
    labs(x = "Life expectancy (years)", y = "") +
    theme_thesis() +
    theme(
      legend.position = c(0.9, 0.1),
      legend.key.size = unit(5, "pt")
    )

  p_change <- median_e0_change |>
    left_join(lookup) |>
    filter(sex == s) |>
    mutate(LAD2020NM = factor(LAD2020NM, levels = district_ridge_order)) |>
    ggplot(aes(x = de0, y = LAD2020NM, group = LAD2020)) +
    stat_density_ridges(colour = "#cccccc", fill = "#cccccc", size = 0.1, alpha = 0.7) +
    scale_y_discrete(expand = c(0, 0, 0.05, 0)) +
    labs(x = "Change in expectancy (years)", y = "") +
    theme_thesis() +
    theme(legend.position = "none")

  grid <- plot_grid(p_level, p_change, rel_widths = c(1.4, 1))

  save_plot(
    here(
      "thesis_analysis",
      "london",
      "figures",
      str_c(s, "_ridges", ".pdf")
    ),
    grid
  )
}
```

## geofacet

```{r geofacet}
scale_sex <- list(
  women = scale_colour_gradient(
    low = desaturate(sex_pal[2], amount = 1.0),
    high = sex_pal[2],
    name = "",
    breaks = c(2002, 2010, 2019)
  ),
  men = scale_colour_gradient(
    low = desaturate(sex_pal[1], amount = 1.0),
    high = sex_pal[1],
    name = "",
    breaks = c(2002, 2010, 2019)
  )
)

for (s in sexes) {
  p <- e0_LAD |>
    ggplot(aes(x = e0med, y = inequalitymed)) +
    geom_path(
      aes(group = LAD2020NM),
      data = e0_LAD |>
        filter(sex == s) |>
        left_join(lookup |> select(-c(LSOA2011, MSOA2011)) |> distinct()) |> select(-LAD2020),
      colour = "grey80",
      size = 0.1
    ) +
    geom_path(
      aes(group = LAD2020, colour = year),
      data = e0_LAD |> filter(sex == s),
      size = 0.3
    ) +
    facet_geo(~LAD2020, grid = "gb_london_boroughs_grid", label = "name") +
    scale_sex[[s]] +
    labs(
      x = "District life expectancy (years)",
      y = "Life expectancy inequality (years)"
    ) +
    theme_thesis() +
    theme(
      legend.position = c(0.87, 0.04),
      legend.direction = "horizontal",
      legend.key.width = unit(15, units = "pt"),
      legend.key.height = unit(5, units = "pt"),
      legend.text = element_text(size = 5),
      strip.text = element_text(size = 4)
    )

  save_plot(
    here(
      "thesis_analysis",
      "london",
      "figures",
      str_c(s, "_geofacet", ".pdf")
    ),
    p
  )
}
```

## jitter change between periods

```{r calculate change 2002, 2006, 2010, 2014, 2019}
median_e0_changes <- apply(
  X = e0[, c("2002", "2006", "2010", "2014", "2019"), , ],
  MARGIN = c(1, 3, 4),
  FUN = diff
) |>
  apply(
    MARGIN = c(1, 2, 3),
    FUN = median
  ) |>
  as.data.frame.table(stringsAsFactors = FALSE) |>
  as_tibble() |>
  rename(year = Var1, de0 = Freq) |>
  mutate(
    period = recode(
      year,
      `2006` = "2002-2006",
      `2010` = "2006-2010",
      `2014` = "2010-2014",
      `2019` = "2014-2019"
    )
  ) |>
  left_join(
    median_e0 |>
      filter(year == 2002 | year == 2006 | year == 2010 | year == 2014) |>
      group_by(sex, year) |>
      mutate(percentile = ntile(e0, 100) / 100) |>
      ungroup() |>
      mutate(
        period = recode(
          year,
          `2002` = "2002-2006",
          `2006` = "2006-2010",
          `2010` = "2010-2014",
          `2014` = "2014-2019"
        )
      ) |>
      select(-e0, -year)
  )
```

```{r e0 jitter change plot}
p <- ggplot(
  data = median_e0_changes,
  aes(x = period, y = de0, colour = percentile)
) +
  jitter_change_skeleton +
  facet_wrap(~ factor(sex, levels = sexes))

save_plot(
  here(
    "thesis_analysis",
    "london",
    "figures",
    "change.pdf"
  ),
  p
)
```
